### 알고리즘을 공부하는 방법
1. 먼저 알고리즘이나 문제를 푸는 방법을 이해
- 완벽하지 않거나 일부만 이해했어도 성공!
2. 관련 문제를 풀어본다.
- 한 문제는 길어야 1시간 정도만 고민한다.
- 모르겠으면 접어두고 풀이를 본다.
3. 1번과 2번에서 이해가 가지 않으면 질문한다.
4. 다시 알고리즘을 이해해보고 문제를 다시 풀어본다.
- 모르겠으면 포기하고 다시 풀이를 본다.
- 그래도 모르겠으면 놀러 나간 뒤 나중에 풀어본다.

    - 가장 중요한 점 : 프로그래밍을 많이 하는 것도 중요하지만 생각을 많이 하는게 중요하다.

### 시간 복잡도
- 시간 복잡도를 이용하면 작성한 코드가 시간이 얼마나 걸릴지 예상 가능하다.
- 표기법으로 대문자 O를 사용한다.
- 입력의 크기에 대해 시간이 얼마나 걸릴지 나타내는 방법.
- 최악의 경우를 표현해야 한다.

### 1초가 걸리는 입력의 크기
O(N) : 1억
O(NlgN) : 5백만 ; N개를 절반으로 계속해서 나누는 경우, 트리
O(N^2) : 1만 ; 2중 for문
O(N^3) : 500 ; 3중 for문
O(2^N) : 20 ; 크기가 N인 집합의 부분 집합
O(N!) : 10 ; 크기가 N인 순열, 즉 순서가 다른 의미를 가질 때

구현을 하기 전에 미리 시간 복잡도를 계산 해보자.

Big O에서 상수는 버리고, 두 가지 항이 있을 때, 변수가 같으면 큰 것만 빼고 다 버린다.
다만 두 가지 항이 있는데 변수가 다르면 그대로 놔둔다.
